{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartDataState = {\n  ProductData: [],\n  totalQuantity: 0\n};\nconst ProductDataSlice = createSlice({\n  name: 'productdata',\n  initialState: initialCartDataState,\n  reducers: {\n    addProductData(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.ProductData.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.ProductData.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n\n      // const existingProductIndex = state.ProductData.findIndex(\n      //     (product) => {\n      //         return product.id === action.payload.id\n      //     } \n      // );\n      // if (existingProductIndex >=0) {\n      //     state.ProductData[existingProductIndex].quantity += 1;\n      //     // state.totalamount += state.ProductData[existingProductIndex].price;\n      //     state.ProductData[existingProductIndex].totalamount += state.ProductData[existingProductIndex].price;\n      // } else {\n      //     state.ProductData.push({ ...action.payload, quantity: 1,totalamount : action.payload.price });\n      //     // state.ProductData.totalamount += action.payload.price;\n      // }\n      // state.totalamount = state.ProductData.reduce((sum, product) => sum + product.totalamount, 0);\n    },\n    increaseQuantity(state, action) {\n      const product = state.ProductData.findIndex(product => product.id === action.payload);\n      console.log(product);\n      if (product >= 0) {\n        state.ProductData[product].quantity += 1;\n        state.ProductData[product].totalamount += state.ProductData[product].price;\n      }\n    },\n    decreaseQuantity(state, action) {\n      const product = state.ProductData.findIndex(product => product.id === action.payload);\n      if (product >= 0) {\n        state.ProductData[product].quantity -= 1;\n        state.ProductData[product].totalamount -= state.ProductData[product].price;\n\n        // Remove the product if quantity becomes 0\n        if (state.ProductData[product].quantity === 0) {\n          state.ProductData = state.ProductData.filter(item => item.id !== state.ProductData[product].id);\n        }\n      }\n    }\n  }\n});\nconsole.log(initialCartDataState);\nexport const ProductDataAction = ProductDataSlice.actions;\nexport default ProductDataSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartDataState","ProductData","totalQuantity","ProductDataSlice","name","initialState","reducers","addProductData","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","increaseQuantity","product","findIndex","console","log","totalamount","decreaseQuantity","filter","ProductDataAction","actions","reducer"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/ProductDataSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartDataState = {\r\n    ProductData: [],\r\n    totalQuantity: 0,\r\n}\r\n\r\nconst ProductDataSlice = createSlice({\r\n    name: 'productdata',\r\n    initialState: initialCartDataState,\r\n    reducers: {\r\n        addProductData(state, action) {\r\n\r\n            const newItem = action.payload;\r\n            const existingItem = state.ProductData.find((item)=>item.id ===newItem.id);\r\n\r\n            if(!existingItem){\r\n                state.ProductData.push({\r\n                    id : newItem.id,\r\n                    price : newItem.price,\r\n                    quantity : 1,\r\n                    totalPrice : newItem.price,\r\n                    name : newItem.title,\r\n                });\r\n            }else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n\r\n\r\n            // const existingProductIndex = state.ProductData.findIndex(\r\n            //     (product) => {\r\n            //         return product.id === action.payload.id\r\n            //     } \r\n            // );\r\n            // if (existingProductIndex >=0) {\r\n            //     state.ProductData[existingProductIndex].quantity += 1;\r\n            //     // state.totalamount += state.ProductData[existingProductIndex].price;\r\n            //     state.ProductData[existingProductIndex].totalamount += state.ProductData[existingProductIndex].price;\r\n            // } else {\r\n            //     state.ProductData.push({ ...action.payload, quantity: 1,totalamount : action.payload.price });\r\n            //     // state.ProductData.totalamount += action.payload.price;\r\n            // }\r\n            // state.totalamount = state.ProductData.reduce((sum, product) => sum + product.totalamount, 0);\r\n        },\r\n        increaseQuantity(state, action) {\r\n            const product = state.ProductData.findIndex(\r\n                (product) => product.id === action.payload\r\n            );\r\n           console.log(product);\r\n            if (product>=0) {\r\n                state.ProductData[product].quantity += 1;\r\n                state.ProductData[product].totalamount += state.ProductData[product].price;\r\n            }\r\n        },\r\n        decreaseQuantity(state, action) {\r\n            const product = state.ProductData.findIndex(\r\n                (product) => product.id === action.payload\r\n            );\r\n\r\n            if (product >= 0 ) {\r\n                state.ProductData[product].quantity -= 1;\r\n                state.ProductData[product].totalamount -= state.ProductData[product].price;\r\n\r\n                // Remove the product if quantity becomes 0\r\n                if (state.ProductData[product].quantity === 0) {\r\n                    state.ProductData = state.ProductData.filter(\r\n                        (item) => item.id !== state.ProductData[product].id\r\n                    );\r\n                }\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\nconsole.log(initialCartDataState);\r\n\r\nexport const ProductDataAction = ProductDataSlice.actions;\r\nexport default ProductDataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAG;EACzBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,gBAAgB,GAAGJ,WAAW,CAAC;EACjCK,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAEL,oBAAoB;EAClCM,QAAQ,EAAE;IACNC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAE1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,WAAW,CAACY,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAIL,OAAO,CAACK,EAAE,CAAC;MAE1E,IAAG,CAACH,YAAY,EAAC;QACbJ,KAAK,CAACP,WAAW,CAACe,IAAI,CAAC;UACnBD,EAAE,EAAGL,OAAO,CAACK,EAAE;UACfE,KAAK,EAAGP,OAAO,CAACO,KAAK;UACrBC,QAAQ,EAAG,CAAC;UACZC,UAAU,EAAGT,OAAO,CAACO,KAAK;UAC1Bb,IAAI,EAAGM,OAAO,CAACU;QACnB,CAAC,CAAC;MACN,CAAC,MAAI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACrE;;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC;IACDI,gBAAgBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMa,OAAO,GAAGd,KAAK,CAACP,WAAW,CAACsB,SAAS,CACtCD,OAAO,IAAKA,OAAO,CAACP,EAAE,KAAKN,MAAM,CAACE,OACvC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACnB,IAAIA,OAAO,IAAE,CAAC,EAAE;QACZd,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACJ,QAAQ,IAAI,CAAC;QACxCV,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACI,WAAW,IAAIlB,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACL,KAAK;MAC9E;IACJ,CAAC;IACDU,gBAAgBA,CAACnB,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMa,OAAO,GAAGd,KAAK,CAACP,WAAW,CAACsB,SAAS,CACtCD,OAAO,IAAKA,OAAO,CAACP,EAAE,KAAKN,MAAM,CAACE,OACvC,CAAC;MAED,IAAIW,OAAO,IAAI,CAAC,EAAG;QACfd,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACJ,QAAQ,IAAI,CAAC;QACxCV,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACI,WAAW,IAAIlB,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACL,KAAK;;QAE1E;QACA,IAAIT,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACJ,QAAQ,KAAK,CAAC,EAAE;UAC3CV,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,CAAC2B,MAAM,CACvCd,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,KAAK,CAACP,WAAW,CAACqB,OAAO,CAAC,CAACP,EACrD,CAAC;QACL;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;AAEFS,OAAO,CAACC,GAAG,CAACzB,oBAAoB,CAAC;AAEjC,OAAO,MAAM6B,iBAAiB,GAAG1B,gBAAgB,CAAC2B,OAAO;AACzD,eAAe3B,gBAAgB,CAAC4B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}