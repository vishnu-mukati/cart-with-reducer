{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartDataState = {\n  ProductData: [],\n  quantity: 0,\n  totalamount: 0\n};\nconst ProductDataSlice = createSlice({\n  name: 'productdata',\n  initialState: initialCartDataState,\n  reducers: {\n    addProductData(state, action) {\n      console.log(action.payload);\n      state.ProductData = action.payload;\n    },\n    increaseQuantity(state, action) {\n      state.quantity = state.quantity + action.payload;\n      state.totalamount = state.quantity * 6;\n    },\n    decreaseQuantity(state, action) {\n      if (state.quantity > 0) {\n        state.quantity = state.quantity - action.payload;\n        state.totalamount = state.totalamount - state.quantity * 6;\n      } else {\n        state.quantity = 0;\n        state.totalamount = 0;\n      }\n    },\n    CalculateTotalAmount(state, action) {}\n  }\n});\nexport const ProductDataAction = ProductDataSlice.actions;\nexport default ProductDataSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartDataState","ProductData","quantity","totalamount","ProductDataSlice","name","initialState","reducers","addProductData","state","action","console","log","payload","increaseQuantity","decreaseQuantity","CalculateTotalAmount","ProductDataAction","actions","reducer"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/ProductDataSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartDataState = {\r\n    ProductData : [],\r\n    quantity : 0,\r\n    totalamount : 0,\r\n}\r\n\r\nconst ProductDataSlice = createSlice({\r\n    name : 'productdata',\r\n    initialState : initialCartDataState,\r\n    reducers : {\r\n        addProductData (state,action){\r\n            console.log(action.payload);\r\n            state.ProductData = action.payload;\r\n        },\r\n        increaseQuantity(state,action){\r\n           state.quantity = state.quantity+action.payload;\r\n           state.totalamount =  state.quantity*6;\r\n        },\r\n        decreaseQuantity(state,action){\r\n            if(state.quantity>0){\r\n                state.quantity = state.quantity-action.payload;\r\n                state.totalamount = state.totalamount-state.quantity*6;\r\n            }else{\r\n                state.quantity = 0;\r\n                state.totalamount = 0;\r\n            }\r\n        },\r\n        CalculateTotalAmount(state,action){\r\n\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const ProductDataAction = ProductDataSlice.actions;\r\nexport default ProductDataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAG;EACzBC,WAAW,EAAG,EAAE;EAChBC,QAAQ,EAAG,CAAC;EACZC,WAAW,EAAG;AAClB,CAAC;AAED,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAG,aAAa;EACpBC,YAAY,EAAGN,oBAAoB;EACnCO,QAAQ,EAAG;IACPC,cAAcA,CAAEC,KAAK,EAACC,MAAM,EAAC;MACzBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACG,OAAO;IACtC,CAAC;IACDC,gBAAgBA,CAACL,KAAK,EAACC,MAAM,EAAC;MAC3BD,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,GAACQ,MAAM,CAACG,OAAO;MAC9CJ,KAAK,CAACN,WAAW,GAAIM,KAAK,CAACP,QAAQ,GAAC,CAAC;IACxC,CAAC;IACDa,gBAAgBA,CAACN,KAAK,EAACC,MAAM,EAAC;MAC1B,IAAGD,KAAK,CAACP,QAAQ,GAAC,CAAC,EAAC;QAChBO,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,GAACQ,MAAM,CAACG,OAAO;QAC9CJ,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACN,WAAW,GAACM,KAAK,CAACP,QAAQ,GAAC,CAAC;MAC1D,CAAC,MAAI;QACDO,KAAK,CAACP,QAAQ,GAAG,CAAC;QAClBO,KAAK,CAACN,WAAW,GAAG,CAAC;MACzB;IACJ,CAAC;IACDa,oBAAoBA,CAACP,KAAK,EAACC,MAAM,EAAC,CAElC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,iBAAiB,GAAGb,gBAAgB,CAACc,OAAO;AACzD,eAAed,gBAAgB,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}