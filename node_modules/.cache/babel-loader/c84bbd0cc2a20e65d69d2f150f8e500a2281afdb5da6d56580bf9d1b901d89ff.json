{"ast":null,"code":"import { UIAction } from \"./UISlice\";\nimport { ProductDataAction } from \"./ProductDataSlice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(ProductDataAction.replaceCart(cartData));\n    } catch (err) {\n      dispatch(UIAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(UIAction.showNotification({\n      status: 'pending',\n      title: 'pending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sent cart data failed!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(UIAction.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (err) {\n      dispatch(UIAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["UIAction","ProductDataAction","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","err","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { UIAction } from \"./UISlice\"\r\nimport { ProductDataAction } from \"./ProductDataSlice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        };\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(ProductDataAction.replaceCart(cartData));\r\n        } catch (err) {\r\n            dispatch(UIAction.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Fetching cart data failed!',\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(UIAction.showNotification({\r\n            status: 'pending',\r\n            title: 'pending...',\r\n            message: 'Sending cart data!',\r\n        }))\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json', {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(cart)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error('Sent cart data failed!');\r\n            }\r\n        }\r\n        try {\r\n            await sendRequest();\r\n            dispatch(UIAction.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'Sent cart data successfully!',\r\n            }))\r\n        } catch (err) {\r\n            dispatch(UIAction.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Sent cart data failed!',\r\n            }))\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,WAAW;AACpC,SAASC,iBAAiB,QAAQ,oBAAoB;AAEtD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;MAE/F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IACD,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,iBAAiB,CAACW,WAAW,CAACD,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVV,QAAQ,CAACH,QAAQ,CAACc,gBAAgB,CAAC;QAC/BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOhB,QAAQ,IAAK;IACvBA,QAAQ,CAACH,QAAQ,CAACc,gBAAgB,CAAC;MAC/BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IACH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,EAAE;QAC5Fe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC7B,CAAC,CAAC;MACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;IACJ,CAAC;IACD,IAAI;MACA,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CAACH,QAAQ,CAACc,gBAAgB,CAAC;QAC/BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACVV,QAAQ,CAACH,QAAQ,CAACc,gBAAgB,CAAC;QAC/BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}