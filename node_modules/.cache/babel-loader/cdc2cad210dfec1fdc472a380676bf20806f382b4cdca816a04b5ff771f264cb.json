{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartDataState = {\n  ProductData: [{\n    title: 'Test',\n    price: 6,\n    description: 'This is a first product - amazing!'\n  }],\n  quantity: 0,\n  totalamount: 0\n};\nconst ProductDataSlice = createSlice({\n  name: 'productdata',\n  initialState: initialCartDataState,\n  reducers: {\n    addProductData(state, action) {\n      console.log(state.ProductData.title);\n      // Check if the product already exists in the cart\n      //   const existingProductIndex = state.ProductData.findIndex(\n      //     (product) => product.title === action.payload.title\n      // );\n      // if (existingProductIndex >= 0) {\n      //     // If it exists, update the quantity\n      //     state.ProductData[existingProductIndex].quantity += 1;\n      // } else {\n      //     // If it doesn't exist, add it with an initial quantity\n      //     state.ProductData.push({ ...action.payload, quantity: 1 });\n      // }\n    },\n    increaseQuantity(state, action) {\n      state.quantity = state.quantity + action.payload;\n      state.totalamount = state.quantity * 6;\n    },\n    decreaseQuantity(state, action) {\n      if (state.quantity > 0) {\n        state.quantity = state.quantity - action.payload;\n        state.totalamount = state.quantity * 6;\n      } else {\n        state.quantity = 0;\n        state.totalamount = 0;\n      }\n    }\n  }\n});\nexport const ProductDataAction = ProductDataSlice.actions;\nexport default ProductDataSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartDataState","ProductData","title","price","description","quantity","totalamount","ProductDataSlice","name","initialState","reducers","addProductData","state","action","console","log","increaseQuantity","payload","decreaseQuantity","ProductDataAction","actions","reducer"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/ProductDataSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartDataState = {\r\n    ProductData: [\r\n        {\r\n            title:'Test',\r\n            price:6,\r\n            description:'This is a first product - amazing!'\r\n        }\r\n    ],\r\n    quantity: 0,\r\n    totalamount: 0,\r\n}\r\n\r\nconst ProductDataSlice = createSlice({\r\n    name: 'productdata',\r\n    initialState: initialCartDataState,\r\n    reducers: {\r\n        addProductData(state, action) {\r\n            console.log(state.ProductData.title)\r\n            // Check if the product already exists in the cart\r\n            //   const existingProductIndex = state.ProductData.findIndex(\r\n            //     (product) => product.title === action.payload.title\r\n            // );\r\n            // if (existingProductIndex >= 0) {\r\n            //     // If it exists, update the quantity\r\n            //     state.ProductData[existingProductIndex].quantity += 1;\r\n            // } else {\r\n            //     // If it doesn't exist, add it with an initial quantity\r\n            //     state.ProductData.push({ ...action.payload, quantity: 1 });\r\n            // }\r\n        },\r\n        increaseQuantity(state, action) {\r\n            state.quantity = state.quantity + action.payload;\r\n            state.totalamount = state.quantity * 6;\r\n        },\r\n        decreaseQuantity(state, action) {\r\n            if (state.quantity > 0) {\r\n                state.quantity = state.quantity - action.payload;\r\n                state.totalamount = state.quantity * 6;\r\n            } else {\r\n                state.quantity = 0;\r\n                state.totalamount = 0;\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\nexport const ProductDataAction = ProductDataSlice.actions;\r\nexport default ProductDataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAG;EACzBC,WAAW,EAAE,CACT;IACIC,KAAK,EAAC,MAAM;IACZC,KAAK,EAAC,CAAC;IACPC,WAAW,EAAC;EAChB,CAAC,CACJ;EACDC,QAAQ,EAAE,CAAC;EACXC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,gBAAgB,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAET,oBAAoB;EAClCU,QAAQ,EAAE;IACNC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACX,WAAW,CAACC,KAAK,CAAC;MACpC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC;IACDc,gBAAgBA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACI,OAAO;MAChDL,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACP,QAAQ,GAAG,CAAC;IAC1C,CAAC;IACDa,gBAAgBA,CAACN,KAAK,EAAEC,MAAM,EAAE;MAC5B,IAAID,KAAK,CAACP,QAAQ,GAAG,CAAC,EAAE;QACpBO,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACI,OAAO;QAChDL,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACP,QAAQ,GAAG,CAAC;MAC1C,CAAC,MAAM;QACHO,KAAK,CAACP,QAAQ,GAAG,CAAC;QAClBO,KAAK,CAACN,WAAW,GAAG,CAAC;MACzB;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMa,iBAAiB,GAAGZ,gBAAgB,CAACa,OAAO;AACzD,eAAeb,gBAAgB,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}