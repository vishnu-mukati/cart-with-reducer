{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { UIAction } from \"./UISlice\";\nconst initialCartDataState = {\n  ProductData: [],\n  totalQuantity: 0\n};\nconst ProductDataSlice = createSlice({\n  name: 'productdata',\n  initialState: initialCartDataState,\n  reducers: {\n    replaceCart(state, action) {\n      console.log(action.payload);\n      state.totalQuantity = action.payload.totalQuantity;\n      state.ProductData = action.payload.items;\n    },\n    addProductData(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.ProductData.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.ProductData.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.ProductData.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.ProductData = state.ProductData.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nconst sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(UIAction.showNotification({\n      status: 'pending',\n      title: 'pending...',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json', {\n      method: \"POST\",\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Sent cart data failed!');\n    }\n  };\n};\nexport const ProductDataAction = ProductDataSlice.actions;\nexport default ProductDataSlice.reducer;","map":{"version":3,"names":["createSlice","UIAction","initialCartDataState","ProductData","totalQuantity","ProductDataSlice","name","initialState","reducers","replaceCart","state","action","console","log","payload","items","addProductData","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cartData","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","cart","ok","Error","ProductDataAction","actions","reducer"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/ProductDataSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { UIAction } from \"./UISlice\";\r\n\r\nconst initialCartDataState = {\r\n    ProductData: [],\r\n    totalQuantity: 0,\r\n}\r\n\r\nconst ProductDataSlice = createSlice({\r\n    name: 'productdata',\r\n    initialState: initialCartDataState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            console.log(action.payload);\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.ProductData = action.payload.items;\r\n        },\r\n\r\n        addProductData(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.ProductData.find((item) => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if (!existingItem) {\r\n                state.ProductData.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.ProductData.find((item) => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.ProductData = state.ProductData.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\nconst sendCartData = (cartData) => {\r\n    return async(dispatch) => {\r\n        dispatch(UIAction.showNotification({\r\n            status: 'pending',\r\n            title: 'pending...',\r\n            message: 'Sending cart data!',\r\n        }))\r\n        const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.json', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(cart)\r\n          })\r\n          if (!response.ok) {\r\n             throw new Error('Sent cart data failed!');\r\n          }\r\n    }\r\n}\r\n\r\n\r\nexport const ProductDataAction = ProductDataSlice.actions;\r\nexport default ProductDataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,WAAW;AAEpC,MAAMC,oBAAoB,GAAG;EACzBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAEL,oBAAoB;EAClCM,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACG,OAAO,CAACV,aAAa;MAClDM,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACG,OAAO,CAACC,KAAK;IAC5C,CAAC;IAEDC,cAAcA,CAACN,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMM,OAAO,GAAGN,MAAM,CAACG,OAAO;MAC9B,MAAMI,YAAY,GAAGR,KAAK,CAACP,WAAW,CAACgB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAC7EX,KAAK,CAACN,aAAa,EAAE;MACrB,IAAI,CAACc,YAAY,EAAE;QACfR,KAAK,CAACP,WAAW,CAACmB,IAAI,CAAC;UACnBD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBjB,IAAI,EAAEW,OAAO,CAACS;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACrE;IACJ,CAAC;IAEDI,kBAAkBA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMU,EAAE,GAAGV,MAAM,CAACG,OAAO;MACzB,MAAMI,YAAY,GAAGR,KAAK,CAACP,WAAW,CAACgB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACrEX,KAAK,CAACN,aAAa,EAAE;MACrB,IAAIc,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC7Bd,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,CAACyB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1E,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;MAC3B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMK,YAAY,GAAIC,QAAQ,IAAK;EAC/B,OAAO,MAAMC,QAAQ,IAAK;IACtBA,QAAQ,CAAC9B,QAAQ,CAAC+B,gBAAgB,CAAC;MAC/BC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,EAAE;MAC5FC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MACf,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC5C;EACN,CAAC;AACL,CAAC;AAGD,OAAO,MAAMC,iBAAiB,GAAGvC,gBAAgB,CAACwC,OAAO;AACzD,eAAexC,gBAAgB,CAACyC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}