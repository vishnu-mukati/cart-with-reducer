{"ast":null,"code":"var _jsxFileName = \"E:\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { Fragment, useEffect } from 'react';\nimport { UIAction } from './store/UISlice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const isCartVisible = useSelector(state => state.cartUI.isCartVisible);\n  const cart = useSelector(state => state.data);\n  const notification = useSelector(state => state.cartUI.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(UIAction.showNotification({\n        status: 'pending',\n        title: 'pending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.', {\n        method: \"POST\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        dispatch(UIAction.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sent cart data failed!'\n        }));\n      }\n      dispatch(UIAction.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    sendCartData().catch(err => {\n      dispatch(UIAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sent cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [isCartVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qm7BqNJZ3TJE1wNpfCVRPaaqm2M=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","Cart","Layout","Products","Fragment","useEffect","UIAction","Notification","jsxDEV","_jsxDEV","isInitial","App","_s","dispatch","isCartVisible","state","cartUI","cart","data","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/002 01-starting-project/01-starting-project/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { Fragment, useEffect } from 'react';\nimport { UIAction } from './store/UISlice';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch();\n  const isCartVisible = useSelector((state) => state.cartUI.isCartVisible);\n  const cart = useSelector((state) => state.data);\n  const notification = useSelector((state) => state.cartUI.notification);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(UIAction.showNotification({\n        status: 'pending',\n        title: 'pending...',\n        message: 'Sending cart data!',\n      }))\n      const response = await fetch('https://cart-http-request-default-rtdb.firebaseio.com/cart.', {\n        method: \"POST\",\n        body: JSON.stringify(cart)\n      })\n      if (!response.ok) {\n        dispatch(UIAction.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sent cart data failed!',\n        }))\n      }\n      dispatch(UIAction.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!',\n      }))\n    }\n\n    if(isInitial){\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch((err) => {\n      dispatch(UIAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sent cart data failed!',\n      }))\n    })\n  }, [cart, dispatch])\n  return (\n    <Fragment>\n      {notification && <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />}\n      <Layout>\n        {isCartVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,IAAIC,SAAS,GAAG,IAAI;AACpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,aAAa,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,aAAa,CAAC;EACxE,MAAMG,IAAI,GAAGlB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGpB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACG,YAAY,CAAC;EAEtEd,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BP,QAAQ,CAACP,QAAQ,CAACe,gBAAgB,CAAC;QACjCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAE;QAC1FC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CAAC;MACF,IAAI,CAACQ,QAAQ,CAACM,EAAE,EAAE;QAChBlB,QAAQ,CAACP,QAAQ,CAACe,gBAAgB,CAAC;UACjCC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL;MACAX,QAAQ,CAACP,QAAQ,CAACe,gBAAgB,CAAC;QACjCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAGd,SAAS,EAAC;MACXA,SAAS,GAAG,KAAK;MACjB;IACF;IAEAU,YAAY,CAAC,CAAC,CAACY,KAAK,CAAEC,GAAG,IAAK;MAC5BpB,QAAQ,CAACP,QAAQ,CAACe,gBAAgB,CAAC;QACjCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,IAAI,EAAEJ,QAAQ,CAAC,CAAC;EACpB,oBACEJ,OAAA,CAACL,QAAQ;IAAA8B,QAAA,GACNf,YAAY,iBAAIV,OAAA,CAACF,YAAY;MAC5Be,MAAM,EAAEH,YAAY,CAACG,MAAO;MAC5BC,KAAK,EAAEJ,YAAY,CAACI,KAAM;MAC1BC,OAAO,EAAEL,YAAY,CAACK;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF7B,OAAA,CAACP,MAAM;MAAAgC,QAAA,GACJpB,aAAa,iBAAIL,OAAA,CAACR,IAAI;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1B7B,OAAA,CAACN,QAAQ;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAAC1B,EAAA,CAzDQD,GAAG;EAAA,QACOX,WAAW,EACND,WAAW,EACpBA,WAAW,EACHA,WAAW;AAAA;AAAAwC,EAAA,GAJzB5B,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}