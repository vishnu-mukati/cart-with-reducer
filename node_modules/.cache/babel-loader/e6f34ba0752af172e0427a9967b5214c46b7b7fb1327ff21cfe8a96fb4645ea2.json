{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartDataState = {\n  ProductData: [],\n  quantity: 0,\n  totalamount: 0\n};\nconst ProductDataSlice = createSlice({\n  name: 'productdata',\n  initialState: initialCartDataState,\n  reducers: {\n    addProductData(state, action) {\n      const existingProduct = state.ProductData.find(product => product.id === action.payload.id);\n      if (existingProduct) {\n        existingProduct.quantity += 1;\n        state.totalamount += existingProduct.price;\n      } else {\n        state.ProductData.push({\n          ...action.payload,\n          quantity: 1\n        });\n        state.totalamount += action.payload.price;\n      }\n    },\n    increaseQuantity(state, action) {\n      const product = state.ProductData.find(product => product.id === action.payload.id);\n      if (product) {\n        product.quantity += 1;\n        state.totalamount += product.price;\n      }\n    },\n    decreaseQuantity(state, action) {\n      const product = state.ProductData.find(product => product.id === action.payload.id);\n      if (product && product.quantity > 0) {\n        product.quantity -= 1;\n        state.totalamount -= product.price;\n\n        // Remove the product if quantity becomes 0\n        if (product.quantity === 0) {\n          state.ProductData = state.ProductData.filter(item => item.id !== product.id);\n        }\n      }\n    }\n  }\n});\nconsole.log(initialCartDataState);\nexport const ProductDataAction = ProductDataSlice.actions;\nexport default ProductDataSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartDataState","ProductData","quantity","totalamount","ProductDataSlice","name","initialState","reducers","addProductData","state","action","existingProduct","find","product","id","payload","price","push","increaseQuantity","decreaseQuantity","filter","item","console","log","ProductDataAction","actions","reducer"],"sources":["E:/002 01-starting-project/01-starting-project/src/store/ProductDataSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartDataState = {\r\n    ProductData: [],\r\n    quantity: 0,\r\n    totalamount: 0,\r\n}\r\n\r\nconst ProductDataSlice = createSlice({\r\n    name: 'productdata',\r\n    initialState: initialCartDataState,\r\n    reducers: {\r\n        addProductData(state, action) {\r\n            const existingProduct = state.ProductData.find(\r\n                (product) => product.id === action.payload.id\r\n            );\r\n           if(existingProduct){\r\n            existingProduct.quantity += 1;\r\n            state.totalamount += existingProduct.price;\r\n           }else{\r\n            state.ProductData.push({ ...action.payload, quantity: 1 });\r\n            state.totalamount += action.payload.price;\r\n           }\r\n        },\r\n        increaseQuantity(state, action) {\r\n            const product = state.ProductData.find(\r\n                (product) => product.id === action.payload.id\r\n            );\r\n\r\n            if (product) {\r\n                product.quantity += 1;\r\n                state.totalamount += product.price;\r\n            }\r\n        },\r\n        decreaseQuantity(state, action) {\r\n            const product = state.ProductData.find(\r\n                (product) => product.id === action.payload.id\r\n            );\r\n\r\n            if (product && product.quantity > 0) {\r\n                product.quantity -= 1;\r\n                state.totalamount -= product.price;\r\n\r\n                // Remove the product if quantity becomes 0\r\n                if (product.quantity === 0) {\r\n                    state.ProductData = state.ProductData.filter(\r\n                        (item) => item.id !== product.id\r\n                    );\r\n                }\r\n            }\r\n        },\r\n    }\r\n})\r\n\r\nconsole.log(initialCartDataState);\r\n\r\nexport const ProductDataAction = ProductDataSlice.actions;\r\nexport default ProductDataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAG;EACzBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,CAAC;EACXC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAEN,oBAAoB;EAClCO,QAAQ,EAAE;IACNC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMC,eAAe,GAAGF,KAAK,CAACR,WAAW,CAACW,IAAI,CACzCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAC/C,CAAC;MACF,IAAGH,eAAe,EAAC;QAClBA,eAAe,CAACT,QAAQ,IAAI,CAAC;QAC7BO,KAAK,CAACN,WAAW,IAAIQ,eAAe,CAACK,KAAK;MAC3C,CAAC,MAAI;QACJP,KAAK,CAACR,WAAW,CAACgB,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEb,QAAQ,EAAE;QAAE,CAAC,CAAC;QAC1DO,KAAK,CAACN,WAAW,IAAIO,MAAM,CAACK,OAAO,CAACC,KAAK;MAC1C;IACH,CAAC;IACDE,gBAAgBA,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMG,OAAO,GAAGJ,KAAK,CAACR,WAAW,CAACW,IAAI,CACjCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAC/C,CAAC;MAED,IAAID,OAAO,EAAE;QACTA,OAAO,CAACX,QAAQ,IAAI,CAAC;QACrBO,KAAK,CAACN,WAAW,IAAIU,OAAO,CAACG,KAAK;MACtC;IACJ,CAAC;IACDG,gBAAgBA,CAACV,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMG,OAAO,GAAGJ,KAAK,CAACR,WAAW,CAACW,IAAI,CACjCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAC/C,CAAC;MAED,IAAID,OAAO,IAAIA,OAAO,CAACX,QAAQ,GAAG,CAAC,EAAE;QACjCW,OAAO,CAACX,QAAQ,IAAI,CAAC;QACrBO,KAAK,CAACN,WAAW,IAAIU,OAAO,CAACG,KAAK;;QAElC;QACA,IAAIH,OAAO,CAACX,QAAQ,KAAK,CAAC,EAAE;UACxBO,KAAK,CAACR,WAAW,GAAGQ,KAAK,CAACR,WAAW,CAACmB,MAAM,CACvCC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKD,OAAO,CAACC,EAClC,CAAC;QACL;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;AAEFQ,OAAO,CAACC,GAAG,CAACvB,oBAAoB,CAAC;AAEjC,OAAO,MAAMwB,iBAAiB,GAAGpB,gBAAgB,CAACqB,OAAO;AACzD,eAAerB,gBAAgB,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}